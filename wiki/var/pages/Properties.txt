This is a list of all the different flags you can apply to the [element property|Element properties] called Properties.

(The list is valid of commit [b699bb176f41012a43c42dbbf1ec82b7e1c27d3d|https://github.com/simtr/The-Powder-Toy/blob/b699bb176f41012a43c42dbbf1ec82b7e1c27d3d/src/simulation/Elements.h#L13-L33])

If you think this isn't the right place to be, a few alternatives are listed below.

* [Element properties]
* [Particle properties]

! Lua

In Lua, you can access all the same properties under the [elem] table. 

{{elem.TYPE_PART}} 

! The list

{{#define TYPE_PART		0x00001  //1 Powders
#define TYPE_LIQUID		0x00002  //2 Liquids
#define TYPE_SOLID		0x00004  //4 Solids
#define TYPE_GAS		0x00008  //8 Gasses (Includes plasma)
#define TYPE_ENERGY		0x00010  //16 Energy (Thunder, Light, Neutrons etc.)
#define PROP_CONDUCTS		0x00020  //32 Conducts electricity
#define PROP_BLACK		0x00040  //64 Absorbs Photons (not currently implemented or used, a photwl attribute might be better)
#define PROP_NEUTPENETRATE	0x00080  //128 Penetrated by neutrons
#define PROP_NEUTABSORB		0x00100  //256 Absorbs neutrons, reflect is default
#define PROP_NEUTPASS		0x00200  //512 Neutrons pass through, such as with glass
#define PROP_DEADLY		0x00400  //1024 Is deadly for stickman
#define PROP_HOT_GLOW		0x00800  //2048 Hot Metal Glow
#define PROP_LIFE		0x01000  //4096 Is a GoL type
#define PROP_RADIOACTIVE	0x02000  //8192 Radioactive
#define PROP_LIFE_DEC		0x04000  //2**14 Life decreases by one every frame if > zero
#define PROP_LIFE_KILL		0x08000  //2**15 Kill when life value is &lt;= zero
#define PROP_LIFE_KILL_DEC	0x10000  //2**16 Kill when life value is decremented to &lt;= zero
#define PROP_SPARKSETTLE	0x20000  //2**17 Allow Sparks/Embers to settle
#define PROP_NOAMBHEAT		0x40000  //2**18 Don't transfer or receive heat from ambient heat.
#define PROP_DRAWONCTYPE	0x80000  //2**19 Set its ctype to another element if the element is drawn upon it (like what CLNE does)
#define PROP_NOCTYPEDRAW	0x100000 // 2**20 When this element is drawn upon with, do not set ctype (like BCLN for CLNE)}}

! TYPE_PART

Value: 1
Powders

! TYPE_LIQUID

Value: 2
Liquids

! TYPE_SOLID

Value: 4
Solids

! TYPE_GAS

Value: 8
Gasses (plasma is actually a gas!)

! TYPE_ENERGY

Value: 16
Is an energy element (Thunder, Light, Neutrons etc.)
This ups the stacking limit and makes the particles not collide with each other.

! PROP_CONDUCTS

Value: 32
Conducts electricity.

! PROP_BLACK

Value: 64
Absorbs Photons (not currently implemented or used, a photwl attribute might be better)

! PROP_NEUTPENETRATE

Value: 128
Neutrons go through it. 

! PROP_NEUTABSORB

Value: 256
Absorbs neutrons instead of reflecting them back.

! PROP_NEUTPASS

Value: 512
Neutrons pass through, such as with glass

! PROP_DEADLY

Value: 1024
Kills stickman when the stickman touches the element.

! PROP_HOT_GLOW

Value: 2048
Adds that red hot metal glow to this element. 

! PROP_LIFE

Value: 4096
This element is actually a game-of-life element.

! PROP_RADIOACTIVE

Value: 8192
Radioactive (kills stickman on touch)

! PROP_LIFE_DEC

Value: 2^^14 
Decrease life by 1 every frame, until it reaches zero.

! PROP_LIFE_KILL

Value: 2^^15
Delete this particle when its life is zero or less. 

! PROP_LIFE_KILL_DEC

Value: 2^^16
A combination of PROP_LIFE_KILL and PROP_LIFE_DEC. 

! PROP_SPARKSETTLE

Value: 2^^17
Embers (EMBR) won't disappear on contact with this element.

! PROP_NOAMBHEAT

Value: 2^^18
Don't transfer or receive heat from ambient heat.

! PROP_DRAWONCTYPE

Value: 2^^19
Set its ctype to another element if the element is drawn upon it.
Basically works like CLNE - if you put down CLNE and try to draw something on it, this sets the clone's ctype internally to the something you wanted to draw on it. And that makes CLNE clone the element you chose.

! PROP_NOCTYPEDRAW

Value: 2^^20 
It blocks your element from being set as a ctype on elements that do use PROP_DRAWONCTYPE. For example, BCLN can't be normally set as a ctype on CLNE.

{tags:Elements, Properties}